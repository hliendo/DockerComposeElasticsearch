version: "3.8"
services:

  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: ${ELK_VERSION:-7.15.1}
    user: "elasticsearch:root"
    volumes:
#      - type: bind
#        source: ./elasticsearch/elasticsearch.yml
#        target: /usr/share/elasticsearch/config/elasticsearch.yml
#        read_only: true
#      - ./elasticsearch/config:/usr/share/elasticsearch/data/config
      - esdata:/usr/share/elasticsearch/data
#      - ${ELASTICSEARCH_DATA:-/volume1/docker/srv/elasticsearch/data}/elasticsearch:/usr/share/elasticsearch/data
    container_name: elasticsearch
    restart: always
    ports:
      - ${ES_PORT}:9200
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - http.host=0.0.0.0
      - http.port=9200
      - node.name=elasticsearch
      - cluster.name=docker-cluster
#      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - bootstrap.memory_lock=false
      - "ES_JAVA_OPTS=-Xms${ES_HEAP_SIZE:-2g} -Xmx${ES_HEAP_SIZE:-2g}"
    cap_add:
      - IPC_LOCK
    mem_limit: ${ES_HEAP_SIZE:-2g}
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    networks:
      - caddy

  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: ${ELK_VERSION:-7.15.1}
    container_name: kibana
    restart: always
    volumes:
      - type: bind
        source: ./kibana/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - ${KIBANA_PORT}:5601
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - XPACK_SECURITY_ENABLED="false"
      - SERVER_HOST="0.0.0.0"
      - SERVER_PORT=${KIBANA_PORT}
    depends_on:
      - elasticsearch
    networks:
      - caddy

networks:
  caddy:
    name: caddy
    external: true

volumes:
  esdata:
    driver: local
